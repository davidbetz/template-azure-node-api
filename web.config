<?xml version="1.0" encoding="utf-8"?>
<!-- options -> https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config -->
<configuration>
  <system.webServer>
    <!-- leave false, you enable support in Azure -->
    <webSocket enabled="false" />
    <handlers>
      <!-- IIS has supported hosting generic apps for a long while nowm here IISNode is used to run Node.js-->
      <!-- great examples here -> https://github.com/tjanczuk/iisnode/tree/master/test/functional/www -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>
        <!-- Is the request a file in /content ? (some people use "/public", but if it's a private site it makes no sense)  -->
        <!-- This is similar to mapping /content to the FS in nginx or... heaven forbid Apache (RIP) -->
        <rule name="StaticContent">
          <action type="Rewrite" url="content{REQUEST_URI}"/>
        </rule>
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server.js"/>
        </rule>
        <!-- don't be stupid. HTTPS might be irresponsible for day-to-day development, but USE SSL IN PRODUCTION! Consider HTTP deprecated. -->
        <rule name="Redirect to https" stopProcessing="true">
          <match url="(.*)" />
          <conditions>
            <add input="{HTTPS}" pattern="off" ignoreCase="true" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}{REQUEST_URI}" redirectType="Permanent" appendQueryString="false" />
        </rule>
      </rules>
    </rewrite>
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>
    <httpErrors existingResponse="PassThrough" />
    <!-- watchedFiles: changes to these files restart the app; analogous to nodemon -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
  </system.webServer>
</configuration>